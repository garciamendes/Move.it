{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/garcia/Desktop/Move.it/frontend-next/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\n// React\nimport { createContext, useState } from 'react';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(0),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  function startNewChallenge() {}\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      startNewChallenge: startNewChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"iJo/KoNlzzN3/XdJDqFmBSgyMTE=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/garcia/Desktop/Move.it/frontend-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","startNewChallenge"],"mappings":";;;;;AAAA;AACA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AAaA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASG,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC9CH,QAAQ,CAAC,CAAD,CADsC;AAAA,MACjEI,KADiE;AAAA,MAC1DC,QAD0D;;AAAA,mBAEtBL,QAAQ,CAAC,CAAD,CAFc;AAAA,MAEjEM,iBAFiE;AAAA,MAE9CC,oBAF8C;;AAAA,mBAGlBP,QAAQ,CAAC,CAAD,CAHU;AAAA,MAGjEQ,mBAHiE;AAAA,MAG5CC,sBAH4C;;AAKxE,WAASC,iBAAT,GAA6B,CAE5B;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLN,MAAAA,KAAK,EAALA,KADK;AAELE,MAAAA,iBAAiB,EAAjBA,iBAFK;AAGLE,MAAAA,mBAAmB,EAAnBA,mBAHK;AAILE,MAAAA,iBAAiB,EAAjBA;AAJK,KADT;AAAA,cAQGP;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArBeD,kB;;KAAAA,kB","sourcesContent":["// React\nimport { createContext, ReactNode, useState } from 'react'\n\ninterface ChallengesContextData {\n  level: number\n  currentExperience: number\n  challengesCompleted: number\n  startNewChallenge: () => void\n}\n\ninterface ChallengesProviderProps {\n  children: ReactNode\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData)\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\n  const [level, setLevel] = useState(0)\n  const [currentExperience, setCurrentExperience] = useState(0)\n  const [challengesCompleted, setChallengesCompleted] = useState(0)\n\n  function startNewChallenge() {\n\n  }\n\n  return (\n    <ChallengesContext.Provider\n      value={{\n        level,\n        currentExperience,\n        challengesCompleted,\n        startNewChallenge\n      }}\n    >\n      {children}\n    </ChallengesContext.Provider>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}