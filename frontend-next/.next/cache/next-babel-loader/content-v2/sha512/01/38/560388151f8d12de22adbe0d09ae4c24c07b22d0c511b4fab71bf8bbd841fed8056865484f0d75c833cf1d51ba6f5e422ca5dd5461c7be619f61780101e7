{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/garcia/Desktop/Move.it/frontend-next/src/components/Countdown.tsx\";\n// React\nimport { useState, useEffect } from 'react'; // Local\n\nimport styles from '../styles/components/Countdown.module.scss'; // javascript\n\nlet countdownTimeout;\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(25 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resertCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(25 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n      onClick: resertCountdown,\n      children: \"Abondonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/garcia/Desktop/Move.it/frontend-next/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Countdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondsLeft","secondsRight","startCountdown","resertCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,4CAAnB,C,CAEA;;AACA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC1B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,KAAK,EAAN,CAAhC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMS,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,QAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;AAEA,QAAM,CAACQ,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BJ,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAApC;;AAGA,WAASG,cAAT,GAA0B;AACxBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,WAASa,eAAT,GAA2B;AACzBC,IAAAA,YAAY,CAACnB,gBAAD,CAAZ;AACAK,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,KAAK,EAAN,CAAP;AACD;;AAEDL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACxBF,MAAAA,gBAAgB,GAAGoB,UAAU,CAAC,MAAM;AAClCjB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAGD;AACF,GANQ,EAMN,CAACE,QAAD,EAAWF,IAAX,CANM,CAAT;AAQA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACsB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOX;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAcIZ,QAAQ,gBAIN;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAG,GAAEL,MAAM,CAACuB,eAAgB,IAAGvB,MAAM,CAACwB,qBAAsB,EAFvE;AAGE,MAAA,OAAO,EAAEL,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJM,gBAaN;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEnB,MAAM,CAACuB,eAFpB;AAGE,MAAA,OAAO,EAAEL,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BN;AAAA,kBADF;AAuCD","sourcesContent":["// React\nimport { useState, useEffect } from 'react'\n\n// Local\nimport styles from '../styles/components/Countdown.module.scss'\n\n// javascript\nlet countdownTimeout: NodeJS.Timeout\n\nexport function Countdown() {\n  const [time, setTime] = useState(25 * 60)\n  const [isActive, setIsActive] = useState(false)\n\n  const minutes = Math.floor(time / 60)\n  const seconds = time % 60\n\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('')\n  const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('')\n\n  \n  function startCountdown() {\n    setIsActive(true)\n  }\n  \n  function resertCountdown() {\n    clearTimeout(countdownTimeout)\n    setIsActive(false)\n    setTime(25 * 60)\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1)\n      }, 1000)\n    }\n  }, [isActive, time])\n\n  return (\n    <>\n      <div className={styles.countdownContainer}>\n        <div>\n          <span>{minuteLeft}</span>\n          <span>{minuteRight}</span>\n        </div>\n        <span>:</span>\n        <div>\n          <span>{secondsLeft}</span>\n          <span>{secondsRight}</span>\n        </div>\n\n      </div>\n\n      { isActive\n\n        ? (\n\n          <button\n            type='button'\n            className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n            onClick={resertCountdown}>\n            Abondonar ciclo\n          </button>\n\n        ) : (\n\n          <button\n            type='button'\n            className={styles.countdownButton}\n            onClick={startCountdown}>\n            Iniciar um ciclo\n          </button>\n        )\n      }\n\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}