{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/garcia/Desktop/Move.it/frontend-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/garcia/Desktop/Move.it/frontend-next/src/components/Countdown.tsx\",\n    _s = $RefreshSig$();\n\n// React\nimport { useState, useEffect } from 'react'; // Local\n\nimport styles from '../styles/components/Countdown.module.scss';\nexport function Countdown() {\n  _s();\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondsLeft = _String$padStart$spli4[0],\n      secondsRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: isActive ? 'Abordonar ciclo' : 'Iniciar um ciclo'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Countdown, \"Gt1wBlh2SAtB67+sBwCXkrGE/Ng=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/home/garcia/Desktop/Move.it/frontend-next/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","Countdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondsLeft","secondsRight","startCountdown","setTimeout","countdownContainer","countdownButton"],"mappings":";;;;;;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,4CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACFH,QAAQ,CAAC,KAAK,EAAN,CADN;AAAA,MACnBI,IADmB;AAAA,MACbC,OADa;;AAAA,mBAEML,QAAQ,CAAC,KAAD,CAFd;AAAA,MAEnBM,QAFmB;AAAA,MAETC,WAFS;;AAI1B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;;AAL0B,8BAOQQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAPR;AAAA;AAAA,MAOnBC,UAPmB;AAAA,MAOPC,WAPO;;AAAA,+BAQUJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CARV;AAAA;AAAA,MAQnBG,WARmB;AAAA,MAQNC,YARM;;AAU1B,WAASC,cAAT,GAA0B;AACxBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAEDN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACxBgB,MAAAA,UAAU,CAAC,YAAM;AACff,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GANQ,EAMN,CAACE,QAAD,EAAWF,IAAX,CANM,CAAT;AAQA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACmB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAON;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEhB,MAAM,CAACoB,eAFpB;AAGE,MAAA,OAAO,EAAEH,cAHX;AAAA,gBAMIb,QAAQ,GAAG,iBAAH,GAAuB;AANnC;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AA0BD;;GAhDeH,S;;KAAAA,S","sourcesContent":["// React\nimport { useState, useEffect } from 'react'\n\n// Local\nimport styles from '../styles/components/Countdown.module.scss'\n\nexport function Countdown() {\n  const [time, setTime] = useState(25 * 60)\n  const [isActive, setIsActive] = useState(false)\n\n  const minutes = Math.floor(time / 60)\n  const seconds = time % 60\n\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('')\n  const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('')\n\n  function startCountdown() {\n    setIsActive(true)\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      setTimeout(() => {\n        setTime(time - 1)\n      }, 1000)\n    }\n  }, [isActive, time])\n\n  return (\n    <>\n      <div className={styles.countdownContainer}>\n        <div>\n          <span>{minuteLeft}</span>\n          <span>{minuteRight}</span>\n        </div>\n        <span>:</span>\n        <div>\n          <span>{secondsLeft}</span>\n          <span>{secondsRight}</span>\n        </div>\n\n      </div>\n\n      <button\n        type='button'\n        className={styles.countdownButton}\n        onClick={startCountdown}>\n\n        {\n          isActive ? 'Abordonar ciclo' : 'Iniciar um ciclo'\n        }\n      </button>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}