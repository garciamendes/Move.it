{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/garcia/Desktop/Move.it/frontend-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/garcia/Desktop/Move.it/frontend-next/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\n// React\nimport { createContext, useEffect, useState } from 'react'; // Third party\n\nimport Cookies from 'js-cookie'; // Local\n\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setIsLevelUpModalOpen = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalOpen(true);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelUpModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('../../assets/notification/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio!!!', {\n        body: \"Valendo \".concat(challenge.amount, \"xp\")\n      });\n    }\n  }\n\n  function resertChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      activeChallenge: activeChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      // Functions\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      resertChallenge: resertChallenge,\n      completeChallenge: completeChallenge,\n      closeLevelUpModal: closeLevelUpModal\n    },\n    children: [children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"UqHVByiPLb7kVaLDO0z8bDhE3KM=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/garcia/Desktop/Move.it/frontend-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setIsLevelUpModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","closeLevelUpModal","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resertChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["// React\nimport { createContext, ReactNode, useEffect, useState } from 'react'\n\n// Third party\nimport Cookies from 'js-cookie'\n\n// Local\nimport challenges from '../../challenges.json'\nimport { LevelUpModal } from '../components/LevelUpModal'\n\ninterface Challenge {\n  type: 'body' | 'eye'\n  description: string\n  amount: number\n}\n\ninterface ChallengesContextData {\n  level: number\n  currentExperience: number\n  challengesCompleted: number\n  activeChallenge: Challenge\n  experienceToNextLevel: number\n  levelUp: () => void\n  startNewChallenge: () => void\n  resertChallenge: () => void\n  completeChallenge: () => void\n  closeLevelUpModal: () => void\n}\n\ninterface ChallengesProviderProps {\n  children: ReactNode\n  level: number\n  currentExperience: number\n  challengesCompleted: number\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData)\n\nexport function ChallengesProvider({ children, ...rest }: ChallengesProviderProps) {\n  const [level, setLevel] = useState(rest.level ?? 1)\n  const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0)\n  const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0)\n\n  const [activeChallenge, setActiveChallenge] = useState(null)\n  const [isLevelUpModalOpen, setIsLevelUpModalOpen] = useState(false)\n\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\n\n  useEffect(() => {\n    Notification.requestPermission()\n  }, [])\n\n  useEffect(() => {\n    Cookies.set('level', String(level))\n    Cookies.set('currentExperience', String(currentExperience))\n    Cookies.set('challengesCompleted', String(challengesCompleted))\n  }, [level, currentExperience, challengesCompleted])\n\n  function levelUp() {\n    setLevel(level + 1)\n    setIsLevelUpModalOpen(true)\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelUpModalOpen(false)\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n    const challenge = challenges[randomChallengeIndex]\n\n    setActiveChallenge(challenge)\n\n    new Audio('../../assets/notification/notification.mp3').play()\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio!!!', {\n        body: `Valendo ${challenge.amount}xp`\n      })\n    }\n  }\n\n  function resertChallenge() {\n    setActiveChallenge(null)\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return\n    }\n\n    const { amount } = activeChallenge\n\n    let finalExperience = currentExperience + amount\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel\n      levelUp()\n    }\n\n    setCurrentExperience(finalExperience)\n    setActiveChallenge(null)\n    setChallengesCompleted(challengesCompleted + 1)\n  }\n\n  return (\n    <ChallengesContext.Provider\n      value={{\n        level,\n        currentExperience,\n        challengesCompleted,\n        activeChallenge,\n        experienceToNextLevel,\n\n        // Functions\n        levelUp,\n        startNewChallenge,\n        resertChallenge,\n        completeChallenge,\n        closeLevelUpModal\n      }}\n    >\n      {children}\n\n      { isLevelUpModalOpen && <LevelUpModal /> }\n    </ChallengesContext.Provider>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}