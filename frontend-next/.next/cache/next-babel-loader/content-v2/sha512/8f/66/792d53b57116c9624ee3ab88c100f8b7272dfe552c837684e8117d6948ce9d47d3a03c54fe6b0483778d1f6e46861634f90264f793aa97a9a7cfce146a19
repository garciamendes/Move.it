{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/garcia/Desktop/Move.it/frontend-next/src/contexts/ChallengesContext.tsx\";\n// React\nimport { createContext, useEffect, useState } from 'react'; // Local\n\nimport challenges from '../../challenges.json';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(0);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('../../assets/notification/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio!!!', {\n        body: `Valendo ${challenge.amount}xp`\n      });\n    }\n  }\n\n  function resertChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallenge;\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      activeChallenge,\n      experienceToNextLevel,\n      // Functions\n      levelUp,\n      startNewChallenge,\n      resertChallenge,\n      completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/garcia/Desktop/Move.it/frontend-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resertChallenge","completeChallenge","finalExperience"],"mappings":";;AAAA;AACA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAwBA,OAAO,MAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASK,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAmE;AACxE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,iBAAD;AAAA,OAAoBC;AAApB,MAA4CR,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACS,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDV,QAAQ,CAAC,CAAD,CAA9D;AAEA,QAAM;AAAA,OAACW,eAAD;AAAA,OAAkBC;AAAlB,MAAwCZ,QAAQ,CAAC,IAAD,CAAtD;AAEA,QAAMa,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,YAAY,CAACC,iBAAb;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,OAAT,GAAmB;AACjBZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASc,iBAAT,GAA6B;AAC3B,UAAMC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA7B;AACA,UAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B;AAEAR,IAAAA,kBAAkB,CAACY,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,4CAAV,EAAwDC,IAAxD;;AAEA,QAAIV,YAAY,CAACW,UAAb,KAA4B,SAAhC,EAA2C;AACzC,UAAIX,YAAJ,CAAiB,iBAAjB,EAAoC;AAClCY,QAAAA,IAAI,EAAG,WAAUJ,SAAS,CAACK,MAAO;AADA,OAApC;AAGD;AACF;;AAED,WAASC,eAAT,GAA2B;AACzBlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAED,WAASmB,iBAAT,GAA6B;AAC3B,QAAI,CAACpB,eAAL,EAAsB;AACpB;AACD;;AAED,UAAM;AAAEkB,MAAAA;AAAF,QAAalB,eAAnB;AAEA,QAAIqB,eAAe,GAAGzB,iBAAiB,GAAGsB,MAA1C;;AAEA,QAAIG,eAAe,IAAInB,qBAAvB,EAA8C;AAC5CmB,MAAAA,eAAe,GAAGA,eAAe,GAAGnB,qBAApC;AACAK,MAAAA,OAAO;AACR;;AAEDV,IAAAA,oBAAoB,CAACwB,eAAD,CAApB;AACApB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,KADK;AAELE,MAAAA,iBAFK;AAGLE,MAAAA,mBAHK;AAILE,MAAAA,eAJK;AAKLE,MAAAA,qBALK;AAOL;AACAK,MAAAA,OARK;AASLC,MAAAA,iBATK;AAULW,MAAAA,eAVK;AAWLC,MAAAA;AAXK,KADT;AAAA,cAeG3B;AAfH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD","sourcesContent":["// React\nimport { createContext, ReactNode, useEffect, useState } from 'react'\n\n// Local\nimport challenges from '../../challenges.json'\n\ninterface Challenge {\n  type: 'body' | 'eye'\n  description: string\n  amount: number\n}\n\ninterface ChallengesContextData {\n  level: number\n  currentExperience: number\n  challengesCompleted: number\n  activeChallenge: Challenge\n  experienceToNextLevel: number\n  levelUp: () => void\n  startNewChallenge: () => void\n  resertChallenge: () => void\n  completeChallenge: () => void\n}\n\ninterface ChallengesProviderProps {\n  children: ReactNode\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData)\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\n  const [level, setLevel] = useState(0)\n  const [currentExperience, setCurrentExperience] = useState(0)\n  const [challengesCompleted, setChallengesCompleted] = useState(0)\n\n  const [activeChallenge, setActiveChallenge] = useState(null)\n\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\n\n  useEffect(() => {\n    Notification.requestPermission()\n  }, [])\n\n  function levelUp() {\n    setLevel(level + 1)\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n    const challenge = challenges[randomChallengeIndex]\n\n    setActiveChallenge(challenge)\n\n    new Audio('../../assets/notification/notification.mp3').play()\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio!!!', {\n        body: `Valendo ${challenge.amount}xp`\n      })\n    }\n  }\n\n  function resertChallenge() {\n    setActiveChallenge(null)\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return\n    }\n\n    const { amount } = activeChallenge\n\n    let finalExperience = currentExperience + amount\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel\n      levelUp()\n    }\n\n    setCurrentExperience(finalExperience)\n    setActiveChallenge(null)\n    setChallengesCompleted(challengesCompleted + 1)\n  }\n\n  return (\n    <ChallengesContext.Provider\n      value={{\n        level,\n        currentExperience,\n        challengesCompleted,\n        activeChallenge,\n        experienceToNextLevel,\n\n        // Functions\n        levelUp,\n        startNewChallenge,\n        resertChallenge,\n        completeChallenge,\n      }}\n    >\n      {children}\n    </ChallengesContext.Provider>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}