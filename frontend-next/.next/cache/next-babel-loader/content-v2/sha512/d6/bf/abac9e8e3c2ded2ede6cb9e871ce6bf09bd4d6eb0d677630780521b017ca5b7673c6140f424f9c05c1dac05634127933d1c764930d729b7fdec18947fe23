{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/garcia/Desktop/Move.it/frontend-next/src/contexts/CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\n// React\nimport { createContext, useContext, useState, useEffect } from \"react\"; // Local\n\nimport { ChallengesContext } from \"./ChallengesContext\"; // javascript\n\nvar countdownTimeout;\nexport var CountdownContext = /*#__PURE__*/createContext({});\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resertCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(.1 * 60);\n    setHasFinished(false);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isActive: isActive,\n      // Functions\n      startCountdown: startCountdown,\n      resertCountdown: resertCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountdownProvider, \"ZjXkLqYyEkEsM7s0gkBGeRPadPc=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["/home/garcia/Desktop/Move.it/frontend-next/src/contexts/CountdownContext.tsx"],"names":["createContext","useContext","useState","useEffect","ChallengesContext","countdownTimeout","CountdownContext","CountdownProvider","children","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","startCountdown","resertCountdown","clearTimeout","setTimeout"],"mappings":";;;;;AAAA;AACA,SACEA,aADF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,OANP,C,CAQA;;AACA,SAASC,iBAAT,QAAkC,qBAAlC,C,CAEA;;AACA,IAAIC,gBAAJ;AAeA,OAAO,IAAMC,gBAAgB,gBAAGN,aAAa,CAAC,EAAD,CAAtC;AAEP,OAAO,SAASO,iBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,oBACxCP,UAAU,CAACG,iBAAD,CAD8B;AAAA,MAC9DK,iBAD8D,eAC9DA,iBAD8D;;AAAA,kBAG9CP,QAAQ,CAAC,KAAK,EAAN,CAHsC;AAAA,MAG/DQ,IAH+D;AAAA,MAGzDC,OAHyD;;AAAA,mBAItCT,QAAQ,CAAC,KAAD,CAJ8B;AAAA,MAI/DU,QAJ+D;AAAA,MAIrDC,WAJqD;;AAAA,mBAKhCX,QAAQ,CAAC,KAAD,CALwB;AAAA,MAK/DY,WAL+D;AAAA,MAKlDC,cALkD;;AAOtE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAEA,WAASU,cAAT,GAA0B;AACxBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,WAASQ,eAAT,GAA2B;AACzBC,IAAAA,YAAY,CAACjB,gBAAD,CAAZ;AACAQ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,KAAK,EAAN,CAAP;AACAI,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AAEDZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACxBL,MAAAA,gBAAgB,GAAGkB,UAAU,CAAC,YAAM;AAClCZ,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAGD,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,IAAI,CAAxB,EAA2B;AAChCK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,iBAAiB;AAClB;AACF,GAVQ,EAUN,CAACG,QAAD,EAAWF,IAAX,CAVM,CAAT;AAYA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,OAAO,EAAPA,OADK;AAELG,MAAAA,OAAO,EAAPA,OAFK;AAGLL,MAAAA,WAAW,EAAXA,WAHK;AAILF,MAAAA,QAAQ,EAARA,QAJK;AAML;AACAQ,MAAAA,cAAc,EAAdA,cAPK;AAQLC,MAAAA,eAAe,EAAfA;AARK,KADT;AAAA,cAYGb;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAjDeD,iB;;KAAAA,iB","sourcesContent":["// React\nimport {\n  createContext,\n  ReactNode,\n  useContext,\n  useState,\n  useEffect\n} from \"react\";\n\n// Local\nimport { ChallengesContext } from \"./ChallengesContext\";\n\n// javascript\nlet countdownTimeout: NodeJS.Timeout\n\ninterface CountdownContextData {\n  minutes: number\n  seconds: number\n  hasFinished: boolean\n  isActive: boolean\n  startCountdown: () => void\n  resertCountdown: () => void\n}\n\ninterface CountdownProviderProps {\n  children: ReactNode\n}\n\nexport const CountdownContext = createContext({} as CountdownContextData)\n\nexport function CountdownProvider({ children }: CountdownProviderProps) {\n  const { startNewChallenge } = useContext(ChallengesContext)\n\n  const [time, setTime] = useState(.1 * 60)\n  const [isActive, setIsActive] = useState(false)\n  const [hasFinished, setHasFinished] = useState(false)\n\n  const minutes = Math.floor(time / 60)\n  const seconds = time % 60\n\n  function startCountdown() {\n    setIsActive(true)\n  }\n\n  function resertCountdown() {\n    clearTimeout(countdownTimeout)\n    setIsActive(false)\n    setTime(.1 * 60)\n    setHasFinished(false)\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1)\n      }, 1000)\n    } else if (isActive && time == 0) {\n      setHasFinished(true)\n      setIsActive(false)\n      startNewChallenge()\n    }\n  }, [isActive, time])\n\n  return (\n    <CountdownContext.Provider\n      value={{\n        minutes,\n        seconds,\n        hasFinished,\n        isActive,\n\n        // Functions\n        startCountdown,\n        resertCountdown\n      }}\n    >\n      {children}\n    </CountdownContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}